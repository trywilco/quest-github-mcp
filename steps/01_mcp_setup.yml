id: mcp_setup
learningObjectives:
  - Set up and configure the GitHub MCP Server in your Codespace
  - Understand MCP as "USB-C for AI" and how it expands Copilot's capabilities
  - Configure environment and verify Quiz App functionality
hints: []
startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: "**Step 1: Environment Setup and MCP Configuration**"
          - text: "Once your Codespace is ready:"
          - text: "1. Confirm you have the required extensions: GitHub Copilot Chat ✅ and Python ✅"
          - text: "2. Verify the app works by going to the **Run and Debug** tab, clicking ▶️ **Start Debugging**, and previewing the app in the **Ports** tab"
          - text: "**Now, let's add the MCP Server:**"
          - text: "Create `.vscode/mcp.json` and add the GitHub MCP Server configuration:"
          - text: |
            ```json
            {
              "servers": {
                "github": {
                  "type": "http",
                  "url": "https://api.githubcopilot.com/mcp/"
                }
              }
            }
            ```
          - text: "Once you save the file, a GitHub authentication window will pop up asking you to connect with your GitHub account."
          - text: "Follow the instructions in the popup to authenticate. Once done, close the window and return to your Codespace to continue working with MCP."
          - text: "Commit and push `.vscode/mcp.json` to complete the setup."
          - text: ":instruction[Create the MCP configuration file and commit it to your repository.] Once you've created `.vscode/mcp.json` with the GitHub MCP Server configuration and committed it, I'll detect your progress and we can move to the next step!"

trigger:
  type: github_pr_lifecycle_status
  flowNode:
    do:
      - actionId: github_pr_review
        params:
          messages:
            person: lucca
