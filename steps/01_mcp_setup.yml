id: mcp_setup
learningObjectives:
  - Set up and configure the GitHub MCP Server in your Codespace
  - Understand MCP as "USB-C for AI" and how it expands Copilot's capabilities
  - Configure environment and verify Quiz App functionality
hints: []
startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: "üß† Welcome to the Copilot Agent Mode + MCP Quest! I'm excited to guide you through this advanced AI-powered development workflow! üöÄ"
          - text: "In this quest, you'll learn to supercharge GitHub Copilot with the GitHub MCP Server. MCP (Model Context Protocol) is like 'USB-C for AI' - it helps AI tools like Copilot understand what external tools (like GitHub) are capable of and how to interact with them safely."
          - text: "We'll turn GitHub Copilot into a smart teammate that can triage issues, research enhancements, and even generate code ‚Äî all from within your Codespace."
          - text: "**Step 1: Environment Setup and MCP Configuration**"
          - text: "First, let's make sure your Quiz App environment is ready:"
          - text: "[Launch the project via Codespace virtual dev environment](${platform.baseUrl}/my-codespace) or click on Codespace from the Wilco Chat top menu."
          - text: "Once your Codespace is ready:"
          - text: "1. Confirm you have the required extensions: GitHub Copilot Chat ‚úÖ and Python ‚úÖ"
          - text: "2. Verify the app works by going to the **Run and Debug** tab, clicking ‚ñ∂Ô∏è **Start Debugging**, and previewing the app in the **Ports** tab"
          - text: "**Now, let's add the MCP Server:**"
          - text: "Create `.vscode/mcp.json` and add the GitHub MCP Server configuration:"
          - text: |
            ```json
            {
              "servers": {
                "github": {
                  "command": "docker",
                  "args": [
                    "run",
                    "-i",
                    "--rm",
                    "-e",
                    "GITHUB_PERSONAL_ACCESS_TOKEN",
                    "ghcr.io/github/github-mcp-server:v0.1.1"
                  ],
                  "env": {
                    "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}"
                  }
                }
              },
              "inputs": [
                {
                  "type": "promptString",
                  "id": "github_token",
                  "description": "GitHub Personal Access Token",
                  "password": true
                }
              ]
            }
            ```
          - text: "**Get your GitHub token by running:**"
          - text: "`echo $GITHUB_TOKEN`"
          - text: "Use this token when prompted to start the server."
          - text: "Commit and push `.vscode/mcp.json` to complete the setup."
          - text: ":instruction[Create the MCP configuration file and commit it to your repository.] Once you've created `.vscode/mcp.json` with the GitHub MCP Server configuration and committed it, I'll detect your progress and we can move to the next step!"

trigger:
  type: github_pr_lifecycle_status
  flowNode:
    do:
      - actionId: github_pr_review
        params:
          messages:
            person: lucca
